function Map2.new 1
push constant 7
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 1
push constant 4
push constant 16
call Math.multiply 2
push constant 15
add
pop this 2
push constant 28
push constant 16
call Math.multiply 2
pop this 3
push constant 3
push constant 16
call Math.multiply 2
push constant 15
add
pop this 4
push constant 28
push constant 16
call Math.multiply 2
pop this 5
push constant 14
push constant 16
call Math.multiply 2
push constant 15
add
pop this 6
push constant 512
call Array.new 1
pop this 0
call Screen.clearScreen 0
pop temp 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 16
push constant 32
call Math.multiply 2
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push constant 4
lt
not
if-goto WHILE_END1
push constant 5
push constant 32
call Math.multiply 2
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 0
label WHILE_EXP2
push local 0
push constant 3
lt
not
if-goto WHILE_END2
push constant 5
push constant 32
call Math.multiply 2
push constant 6
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
push constant 0
pop local 0
label WHILE_EXP3
push local 0
push constant 3
lt
not
if-goto WHILE_END3
push constant 5
push constant 32
call Math.multiply 2
push constant 11
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP3
label WHILE_END3
push constant 0
pop local 0
label WHILE_EXP4
push local 0
push constant 3
lt
not
if-goto WHILE_END4
push constant 5
push constant 32
call Math.multiply 2
push constant 16
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP4
label WHILE_END4
push constant 0
pop local 0
label WHILE_EXP5
push local 0
push constant 2
lt
not
if-goto WHILE_END5
push constant 5
push constant 32
call Math.multiply 2
push constant 21
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP5
label WHILE_END5
push constant 0
pop local 0
label WHILE_EXP6
push local 0
push constant 3
lt
not
if-goto WHILE_END6
push constant 5
push constant 32
call Math.multiply 2
push constant 25
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP6
label WHILE_END6
push constant 0
pop local 0
label WHILE_EXP7
push local 0
push constant 5
lt
not
if-goto WHILE_END7
push constant 11
push constant 32
call Math.multiply 2
push constant 17
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP7
label WHILE_END7
push constant 0
pop local 0
label WHILE_EXP8
push local 0
push constant 3
lt
not
if-goto WHILE_END8
push constant 13
push local 0
add
push constant 32
call Math.multiply 2
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP8
label WHILE_END8
push constant 0
pop local 0
label WHILE_EXP9
push local 0
push constant 3
lt
not
if-goto WHILE_END9
push constant 13
push local 0
add
push constant 32
call Math.multiply 2
push constant 1
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP9
label WHILE_END9
push constant 0
pop local 0
label WHILE_EXP10
push local 0
push constant 4
lt
not
if-goto WHILE_END10
push constant 12
push local 0
add
push constant 32
call Math.multiply 2
push constant 3
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP10
label WHILE_END10
push constant 0
pop local 0
label WHILE_EXP11
push local 0
push constant 5
lt
not
if-goto WHILE_END11
push constant 11
push local 0
add
push constant 32
call Math.multiply 2
push constant 5
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP11
label WHILE_END11
push constant 11
push constant 32
call Math.multiply 2
push constant 8
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push constant 32
call Math.multiply 2
push constant 10
add
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push constant 32
call Math.multiply 2
push constant 11
add
push this 0
add
push constant 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop local 0
label WHILE_EXP12
push local 0
push constant 2
lt
not
if-goto WHILE_END12
push constant 11
push constant 32
call Math.multiply 2
push constant 13
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP12
label WHILE_END12
push constant 0
pop local 0
label WHILE_EXP13
push local 0
push constant 6
lt
not
if-goto WHILE_END13
push constant 13
push constant 32
call Math.multiply 2
push constant 26
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP13
label WHILE_END13
push constant 0
pop local 0
label WHILE_EXP14
push local 0
push constant 6
lt
not
if-goto WHILE_END14
push constant 14
push constant 32
call Math.multiply 2
push constant 26
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP14
label WHILE_END14
push constant 0
pop local 0
label WHILE_EXP15
push local 0
push constant 10
lt
not
if-goto WHILE_END15
push constant 15
push constant 32
call Math.multiply 2
push constant 22
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP15
label WHILE_END15
push constant 0
pop local 0
label WHILE_EXP16
push local 0
push constant 512
lt
not
if-goto WHILE_END16
push pointer 0
push local 0
push local 0
push this 0
add
pop pointer 1
push that 0
call Map2.Drawblock 3
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP16
label WHILE_END16
push pointer 0
push this 1
push this 2
call Map2.drawCastle 3
pop temp 0
push pointer 0
call Map2.drawSun 1
pop temp 0
push pointer 0
push this 5
push this 6
call Map2.drawUp 3
pop temp 0
push pointer 0
return
function Map2.restart 1
push argument 0
pop pointer 0
push constant 0
pop this 1
push constant 4
push constant 16
call Math.multiply 2
push constant 15
add
pop this 2
push constant 28
push constant 16
call Math.multiply 2
pop this 3
push constant 3
push constant 16
call Math.multiply 2
push constant 15
add
pop this 4
push constant 28
push constant 16
call Math.multiply 2
pop this 5
push constant 14
push constant 16
call Math.multiply 2
push constant 15
add
pop this 6
call Screen.clearScreen 0
pop temp 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 16
push constant 32
call Math.multiply 2
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
push constant 4
lt
not
if-goto WHILE_END1
push constant 5
push constant 32
call Math.multiply 2
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
pop local 0
label WHILE_EXP2
push local 0
push constant 3
lt
not
if-goto WHILE_END2
push constant 5
push constant 32
call Math.multiply 2
push constant 6
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
push constant 0
pop local 0
label WHILE_EXP3
push local 0
push constant 3
lt
not
if-goto WHILE_END3
push constant 5
push constant 32
call Math.multiply 2
push constant 11
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP3
label WHILE_END3
push constant 0
pop local 0
label WHILE_EXP4
push local 0
push constant 3
lt
not
if-goto WHILE_END4
push constant 5
push constant 32
call Math.multiply 2
push constant 16
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP4
label WHILE_END4
push constant 0
pop local 0
label WHILE_EXP5
push local 0
push constant 2
lt
not
if-goto WHILE_END5
push constant 5
push constant 32
call Math.multiply 2
push constant 21
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP5
label WHILE_END5
push constant 0
pop local 0
label WHILE_EXP6
push local 0
push constant 3
lt
not
if-goto WHILE_END6
push constant 5
push constant 32
call Math.multiply 2
push constant 25
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP6
label WHILE_END6
push constant 0
pop local 0
label WHILE_EXP7
push local 0
push constant 5
lt
not
if-goto WHILE_END7
push constant 11
push constant 32
call Math.multiply 2
push constant 17
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP7
label WHILE_END7
push constant 0
pop local 0
label WHILE_EXP8
push local 0
push constant 3
lt
not
if-goto WHILE_END8
push constant 13
push local 0
add
push constant 32
call Math.multiply 2
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP8
label WHILE_END8
push constant 0
pop local 0
label WHILE_EXP9
push local 0
push constant 3
lt
not
if-goto WHILE_END9
push constant 13
push local 0
add
push constant 32
call Math.multiply 2
push constant 1
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP9
label WHILE_END9
push constant 0
pop local 0
label WHILE_EXP10
push local 0
push constant 4
lt
not
if-goto WHILE_END10
push constant 12
push local 0
add
push constant 32
call Math.multiply 2
push constant 3
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP10
label WHILE_END10
push constant 0
pop local 0
label WHILE_EXP11
push local 0
push constant 5
lt
not
if-goto WHILE_END11
push constant 11
push local 0
add
push constant 32
call Math.multiply 2
push constant 5
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP11
label WHILE_END11
push constant 11
push constant 32
call Math.multiply 2
push constant 8
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push constant 32
call Math.multiply 2
push constant 10
add
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push constant 32
call Math.multiply 2
push constant 11
add
push this 0
add
push constant 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop local 0
label WHILE_EXP12
push local 0
push constant 2
lt
not
if-goto WHILE_END12
push constant 11
push constant 32
call Math.multiply 2
push constant 13
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP12
label WHILE_END12
push constant 0
pop local 0
label WHILE_EXP13
push local 0
push constant 6
lt
not
if-goto WHILE_END13
push constant 13
push constant 32
call Math.multiply 2
push constant 26
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP13
label WHILE_END13
push constant 0
pop local 0
label WHILE_EXP14
push local 0
push constant 6
lt
not
if-goto WHILE_END14
push constant 14
push constant 32
call Math.multiply 2
push constant 26
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP14
label WHILE_END14
push constant 0
pop local 0
label WHILE_EXP15
push local 0
push constant 10
lt
not
if-goto WHILE_END15
push constant 15
push constant 32
call Math.multiply 2
push constant 22
add
push local 0
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP15
label WHILE_END15
push constant 0
pop local 0
label WHILE_EXP16
push local 0
push constant 512
lt
not
if-goto WHILE_END16
push pointer 0
push local 0
push local 0
push this 0
add
pop pointer 1
push that 0
call Map2.Drawblock 3
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP16
label WHILE_END16
push pointer 0
push this 1
push this 2
call Map2.drawCastle 3
pop temp 0
push pointer 0
call Map2.drawSun 1
pop temp 0
push pointer 0
push this 5
push this 6
call Map2.drawUp 3
pop temp 0
push constant 0
return
function Map2.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Map2.mapValue 0
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
return
function Map2.Drawblock 2
push argument 0
pop pointer 0
push argument 1
push argument 1
push constant 32
call Math.divide 2
push constant 32
call Math.multiply 2
sub
push constant 16
call Math.multiply 2
pop local 0
push argument 1
push constant 32
call Math.divide 2
push constant 16
call Math.multiply 2
pop local 1
push argument 2
push constant 1
eq
push argument 2
push constant 2
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 0
push local 1
push local 0
push constant 15
add
push local 1
call Screen.drawLine 4
pop temp 0
push local 0
push local 1
push constant 8
add
push local 0
push constant 15
add
push local 1
push constant 8
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 4
add
push local 1
push local 0
push constant 4
add
push local 1
push constant 8
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 10
add
push local 1
push constant 8
add
push local 0
push constant 10
add
push local 1
push constant 15
add
call Screen.drawLine 4
pop temp 0
label IF_FALSE0
push constant 0
return
function Map2.drawUp 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
push constant 31
sub
push argument 1
push constant 31
add
push argument 2
call Screen.drawRectangle 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
push argument 1
push argument 2
push constant 31
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push argument 2
push constant 31
sub
push argument 1
push constant 31
add
push argument 2
push constant 31
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 31
add
push argument 2
push argument 1
push constant 31
add
push argument 2
push constant 31
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 1
add
push argument 2
push constant 22
sub
push argument 1
push constant 15
add
push argument 2
push constant 29
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 31
add
push argument 2
push constant 22
sub
push argument 1
push constant 16
add
push argument 2
push constant 29
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 1
add
push argument 2
push constant 13
sub
push argument 1
push constant 15
add
push argument 2
push constant 20
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 31
add
push argument 2
push constant 13
sub
push argument 1
push constant 16
add
push argument 2
push constant 20
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 1
add
push argument 2
push constant 4
sub
push argument 1
push constant 15
add
push argument 2
push constant 11
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 31
add
push argument 2
push constant 4
sub
push argument 1
push constant 16
add
push argument 2
push constant 11
sub
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Map2.drawCastle 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push constant 22
add
push argument 2
push constant 20
sub
push argument 1
push constant 42
add
push argument 2
call Screen.drawRectangle 4
pop temp 0
push argument 1
push constant 32
add
push argument 2
push constant 20
sub
push constant 10
call Screen.drawCircle 3
pop temp 0
push argument 1
push argument 2
push constant 55
sub
push argument 1
push constant 63
add
push argument 2
push constant 55
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push argument 2
push constant 55
sub
push argument 1
push argument 2
push constant 35
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push argument 2
push constant 35
sub
push argument 1
push constant 63
add
push argument 2
push constant 35
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 63
add
push argument 2
push constant 55
sub
push argument 1
push constant 63
add
push argument 2
push constant 35
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 8
add
push argument 2
push constant 52
sub
push argument 1
push constant 16
add
push argument 2
push constant 52
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 8
add
push argument 2
push constant 46
sub
push argument 1
push constant 16
add
push argument 2
push constant 46
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 8
add
push argument 2
push constant 38
sub
push argument 1
push constant 16
add
push argument 2
push constant 38
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 8
add
push argument 2
push constant 52
sub
push argument 1
push constant 8
add
push argument 2
push constant 38
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 20
add
push argument 2
push constant 52
sub
push argument 1
push constant 30
add
push argument 2
push constant 38
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 30
add
push argument 2
push constant 52
sub
push argument 1
push constant 20
add
push argument 2
push constant 38
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 34
add
push argument 2
push constant 52
sub
push argument 1
push constant 42
add
push argument 2
push constant 52
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 34
add
push argument 2
push constant 38
sub
push argument 1
push constant 42
add
push argument 2
push constant 38
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 38
add
push argument 2
push constant 52
sub
push argument 1
push constant 38
add
push argument 2
push constant 38
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 46
add
push argument 2
push constant 52
sub
push argument 1
push constant 54
add
push argument 2
push constant 52
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 50
add
push argument 2
push constant 52
sub
push argument 1
push constant 50
add
push argument 2
push constant 38
sub
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Map2.drawSun 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 3
push constant 20
add
push this 4
push constant 63
sub
push this 3
push constant 20
add
push this 4
push constant 52
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 21
add
push this 4
push constant 51
sub
push this 3
push constant 22
add
push this 4
push constant 44
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 23
add
push this 4
push constant 43
sub
push this 3
push constant 27
add
push this 4
push constant 35
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 28
add
push this 4
push constant 34
sub
push this 3
push constant 32
add
push this 4
push constant 29
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 33
add
push this 4
push constant 29
sub
push this 3
push constant 45
add
push this 4
push constant 21
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 46
add
push this 4
push constant 21
sub
push this 3
push constant 53
add
push this 4
push constant 19
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 54
add
push this 4
push constant 19
sub
push this 3
push constant 63
add
push this 4
push constant 19
sub
call Screen.drawLine 4
pop temp 0
push this 3
push this 4
push constant 60
sub
push this 3
push constant 20
add
push this 4
push constant 63
sub
call Screen.drawLine 4
pop temp 0
push this 3
push this 4
push constant 60
sub
push this 3
push constant 20
add
push this 4
push constant 55
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 3
add
push this 4
push constant 35
sub
push this 3
push constant 20
add
push this 4
push constant 55
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 3
add
push this 4
push constant 35
sub
push this 3
push constant 23
add
push this 4
push constant 41
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 10
add
push this 4
push constant 20
sub
push this 3
push constant 25
add
push this 4
push constant 38
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 10
add
push this 4
push constant 20
sub
push this 3
push constant 33
add
push this 4
push constant 28
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 28
add
push this 4
push constant 3
sub
push this 3
push constant 34
add
push this 4
push constant 28
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 28
add
push this 4
push constant 3
sub
push this 3
push constant 46
add
push this 4
push constant 20
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 63
add
push this 4
push this 3
push constant 54
add
push this 4
push constant 18
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 63
add
push this 4
push this 3
push constant 63
add
push this 4
push constant 19
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 37
add
push this 4
push constant 54
sub
push constant 2
call Screen.drawCircle 3
pop temp 0
push this 3
push constant 51
add
push this 4
push constant 54
sub
push constant 2
call Screen.drawCircle 3
pop temp 0
push this 3
push constant 35
add
push this 4
push constant 39
sub
push this 3
push constant 40
add
push this 4
push constant 34
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 41
add
push this 4
push constant 34
sub
push this 3
push constant 48
add
push this 4
push constant 32
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 48
add
push this 4
push constant 32
sub
push this 3
push constant 56
add
push this 4
push constant 34
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 27
add
push this 4
push constant 35
sub
push this 3
push constant 28
add
push this 4
push constant 34
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 53
add
push this 4
push constant 33
sub
push this 3
push constant 55
add
push this 4
push constant 27
sub
call Screen.drawLine 4
pop temp 0
push this 3
push constant 57
add
push this 4
push constant 35
sub
push this 3
push constant 55
add
push this 4
push constant 27
sub
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Map2.drawArrow 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push constant 8
add
push argument 2
push constant 15
sub
push argument 1
push constant 8
add
push argument 2
push constant 3
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 6
add
push argument 2
push constant 12
sub
push argument 1
push constant 8
add
push argument 2
push constant 15
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 8
add
push argument 2
push constant 15
sub
push argument 1
push constant 10
add
push argument 2
push constant 12
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 6
add
push argument 2
push constant 1
sub
push argument 1
push constant 8
add
push argument 2
push constant 3
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 8
add
push argument 2
push constant 3
sub
push argument 1
push constant 10
add
push argument 2
push constant 1
sub
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Map2.drawCat 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push constant 16
add
push argument 2
push constant 12
sub
push constant 10
call Screen.drawCircle 3
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push argument 1
push constant 16
add
push argument 2
push constant 12
sub
push constant 9
call Screen.drawCircle 3
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push constant 7
add
push argument 2
push constant 19
sub
push argument 1
push constant 7
add
push argument 2
push constant 26
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 7
add
push argument 2
push constant 26
sub
push argument 1
push constant 13
add
push argument 2
push constant 21
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 25
add
push argument 2
push constant 19
sub
push argument 1
push constant 25
add
push argument 2
push constant 26
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 25
add
push argument 2
push constant 26
sub
push argument 1
push constant 19
add
push argument 2
push constant 21
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 10
add
push argument 2
push constant 16
sub
push argument 1
push constant 14
add
push argument 2
push constant 16
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 18
add
push argument 2
push constant 16
sub
push argument 1
push constant 22
add
push argument 2
push constant 16
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 10
add
push argument 2
push constant 12
sub
push argument 1
push constant 4
add
push argument 2
push constant 12
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 10
add
push argument 2
push constant 9
sub
push argument 1
push constant 3
add
push argument 2
push constant 9
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 22
add
push argument 2
push constant 12
sub
push argument 1
push constant 28
add
push argument 2
push constant 12
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 22
add
push argument 2
push constant 9
sub
push argument 1
push constant 29
add
push argument 2
push constant 9
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 12
add
push argument 2
push constant 12
sub
push argument 1
push constant 16
add
push argument 2
push constant 8
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 16
add
push argument 2
push constant 8
sub
push argument 1
push constant 20
add
push argument 2
push constant 12
sub
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Map2.drawSpike 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 12
push constant 16
call Math.multiply 2
push constant 3
add
push constant 4
push constant 16
call Math.multiply 2
push constant 15
add
push constant 12
push constant 16
call Math.multiply 2
push constant 8
add
push constant 4
push constant 16
call Math.multiply 2
call Screen.drawLine 4
pop temp 0
push constant 12
push constant 16
call Math.multiply 2
push constant 14
add
push constant 4
push constant 16
call Math.multiply 2
push constant 15
add
push constant 12
push constant 16
call Math.multiply 2
push constant 8
add
push constant 4
push constant 16
call Math.multiply 2
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Map2.onGround 0
push argument 0
pop pointer 0
push argument 2
push constant 1
add
push constant 16
call Math.divide 2
push constant 32
call Math.multiply 2
push argument 1
push constant 8
add
push constant 16
call Math.divide 2
add
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
push argument 2
push constant 1
add
push constant 16
call Math.divide 2
push constant 32
call Math.multiply 2
push argument 1
push constant 8
add
push constant 16
call Math.divide 2
add
push this 0
add
pop pointer 1
push that 0
push constant 3
eq
or
push argument 2
push constant 1
add
push constant 16
call Math.divide 2
push constant 32
call Math.multiply 2
push argument 1
push constant 5
add
push constant 16
call Math.divide 2
add
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
or
push argument 2
push constant 1
add
push constant 16
call Math.divide 2
push constant 32
call Math.multiply 2
push argument 1
push constant 5
add
push constant 16
call Math.divide 2
add
push this 0
add
pop pointer 1
push that 0
push constant 3
eq
or
return
function Map2.fakeGround 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push constant 10
push constant 16
call Math.multiply 2
push constant 12
push constant 16
call Math.multiply 2
push constant 10
push constant 16
call Math.multiply 2
push constant 15
add
push constant 12
push constant 16
call Math.multiply 2
push constant 15
add
call Screen.drawRectangle 4
pop temp 0
push pointer 0
push constant 12
push constant 32
call Math.multiply 2
push constant 11
add
push constant 1
call Map2.Drawblock 3
pop temp 0
push constant 0
return
function Map2.headBlock 0
push argument 0
pop pointer 0
push constant 12
push constant 32
call Math.multiply 2
push constant 20
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push constant 32
call Math.multiply 2
push constant 21
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push constant 32
call Math.multiply 2
push constant 22
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push constant 32
call Math.multiply 2
push constant 23
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push constant 32
call Math.multiply 2
push constant 24
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push constant 32
call Math.multiply 2
push constant 25
add
push this 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Map2.finished 0
push argument 0
pop pointer 0
push argument 1
push this 1
push constant 4
add
gt
push argument 2
push this 2
push constant 1
add
lt
and
push argument 1
push this 1
push constant 46
add
lt
and
push argument 2
push this 2
push constant 55
sub
gt
and
return
function Map2.blockRight 0
push argument 0
pop pointer 0
push argument 2
push constant 16
call Math.divide 2
push constant 32
call Math.multiply 2
push argument 1
push constant 16
add
push constant 16
call Math.divide 2
add
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
return
function Map2.blockLeft 0
push argument 0
pop pointer 0
push argument 2
push constant 16
call Math.divide 2
push constant 32
call Math.multiply 2
push argument 1
push constant 1
sub
push constant 16
call Math.divide 2
add
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
return
function Map2.blockUp 0
push argument 0
pop pointer 0
push argument 2
push constant 32
sub
push constant 16
call Math.divide 2
push constant 32
call Math.multiply 2
push argument 1
push constant 16
call Math.divide 2
add
push this 0
add
pop pointer 1
push that 0
push constant 1
eq
return
